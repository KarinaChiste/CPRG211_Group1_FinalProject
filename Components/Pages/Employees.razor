@page "/employees"
@using CPRG211_Group1_FinalProject.Classes
<h3>Employees</h3>

<h3 style="text-align: center;">Search Employees</h3>
<form class="d-flex gap-4" style="padding: 2% 0px 2%">
	<div style="width: 30%">
		<label> Employee ID: </label>
		<input class="form-control" type="text" @bind="id" />
	</div>
	<div style="width: 30%" >
		<label> First Name: </label>
		<input class="form-control" type="text" @bind="employeefirstname" />
	</div>
	<div style="width:30%">
		<label> Staff Type: </label>
		<input class="form-control" type="text" @bind="type" />
	</div>
	<div class="align-self-end flex-grow-1" style="width: 30%;">
		<button type="button" class="btn btn-primary w-100"
		style="white-space: nowrap;" @onclick="FindEmployees">
			Find Employee
		</button>
	</div>
</form>

@* dropdown list *@
<div class="form-group">
	<select class="form-select" @onchange="EmployeeClick">

		@foreach (Employee employee in employees)
		{
			if (chosenEmployee == 1)
			{
				<option selected value="@employee"> @employee.ToString() </option>
			}
			else
			{
				<option value="@employee">@employee.ToString()</option>
			}
		}

	</select>
</div>

@* employee info *@

<div style="padding-top:10px">
	<label>Employee ID: </label> <br />
	<input type="text" style="width:50%; background-color:white" class="form-control" readonly value="@employeeid" />

</div>

<div style="padding-top:10px">
	<label>First Name: </label> <br />
	<input type="text" style="width:50%; background-color:white" class="form-control" readonly value="@firstname" />
</div>

<div style="padding-top:10px">
	<label>Last Name: </label> <br />
	<input type="text" style="width:50%; background-color:white" class="form-control" readonly value="@lastname" />
</div>

<div style="padding-top:10px">
	<label>Position: </label> <br />
	<input type="text" style="width:50%; background-color:white" class="form-control" readonly value="@position" />
</div>

<div style="padding-top:10px">
	<label>Salary: </label> <br />
	<input type="text" style="width:50%; background-color:white" class="form-control" readonly value="@salary" />
</div>

<div style="padding-top:10px">
	<label>Start Date: </label> <br />
	<input type="text" style="width:50%; background-color:white" class="form-control" readonly value="@startdate" />
</div>

<div style="padding-top:10px">
	<label>Hours: </label> <br />
	<input type="text" style="width:50%; background-color:white" class="form-control" readonly value="@hours" />
</div>

<div style="padding-top:10px; padding-bottom:20px">
	<label>Staff Type: </label> <br />
	<input type="text" style="width:50%; background-color:white" class="form-control" readonly value="@stafftype" />
</div>

@* buttons *@

<h3 style="text-align: center;">Manage Employees</h3>

<form class="d-flex gap-4" style="padding-bottom: 10px; padding-top: 10px;">
	<a href="/addemployees" class="btn btn-primary w-100" style="white-space: nowrap;">
		Add Employee
	</a>

	<a href="/editemployees" class="btn btn-primary w-100" style="white-space: nowrap;">
		Edit Employee
	</a>


<!-- 	<button type="button" class="btn btn-primary w-100" style="white-space: nowrap;" @onclick="RemoveEmployee">
		Remove Employee
	</button> -->

	<a href="/removeemployees">
		<button type="button" class="btn btn-primary w-100"
		style="white-space: nowrap;" >
			Remove Employee
		</button>
	</a>

</form>

@success

<br />



@code {

	private string id;
	private string employeefirstname;
	private string type;

	private string employeeid;
	private string firstname;
	private string lastname;
	private string position;
	private string startdate;
	private string salary;
	private string hours;
	private string stafftype;

	public int chosenEmployee = 1;
	public string[] employeeDetails;

	private List<Employee> employees = new List<Employee>();
	private EmployeeManager employeeManager = new EmployeeManager();
	private RestaurantDbAccessor database = new RestaurantDbAccessor();

	private void FindEmployees()
	{
		// if (string.IsNullOrWhiteSpace(id) && string.IsNullOrWhiteSpace(employeefirstname) && string.IsNullOrWhiteSpace(type))
		// {
		// 	employees.Clear();
		// 	return;
		// }
		// employees = database.GetEmployees().Where(item =>
		// 		(string.IsNullOrWhiteSpace(id) || item.EmployeeId.Equals(id, StringComparison.OrdinalIgnoreCase)) &&
		// 				(string.IsNullOrWhiteSpace(employeefirstname) || item.EmployeeFirstName.Equals(employeefirstname, StringComparison.OrdinalIgnoreCase)) &&
		// 				(string.IsNullOrWhiteSpace(type) || item.GetStaffType().Equals(type, StringComparison.OrdinalIgnoreCase))
		// 				).ToList();
		// if(employees.Count != 0)
		// {
		// 	EmployeeSet(employees[employees.Count - 1].ToString());
		// }

		if (string.IsNullOrWhiteSpace(id) && string.IsNullOrWhiteSpace(employeefirstname) && string.IsNullOrWhiteSpace(type))
		{
			return;
		}

		if (string.IsNullOrWhiteSpace(id))
		{
			id = null;	
		}
		if (string.IsNullOrWhiteSpace(employeefirstname))
		{
			employeefirstname = null;
		}
		if (string.IsNullOrWhiteSpace(type))
		{
			type = null;
		}
		employees = database.GetEmployees(id,employeefirstname,type);
		if (employees.Count != 0)
		{
				EmployeeSet(employees[employees.Count - 1].ToString());
			}
	}

	public void EmployeeClick(ChangeEventArgs arg1)
	{
		if(arg1.Value is not null)
		{
			string myEmployee = (string)arg1.Value;
			EmployeeSet(myEmployee);
		}
	}

	public void EmployeeSet(string theEmployee)
	{
		if(theEmployee.Length != 0)
		{
			employeeDetails = theEmployee.Split(",");
			employeeid = employeeDetails[0];
			firstname = employeeDetails[1];
			lastname = employeeDetails[2];
			position = employeeDetails[3];
			salary = employeeDetails[4];
			startdate = employeeDetails[5];
			hours = employeeDetails[6];

<!-- 			stafftype = employeeDetails[7];
		}
	}

	//REMOVE EMPLOYEE CODE

	public string success = string.Empty;


	public void RemoveEmployee()
	{
		try
		{
			if (employeeid == null)
			{
				success = "Please enter a value for Employee Id";
			}
			else
			{
				EmployeeManager.RemoveEmployee(employeeid);
				employeeid = "";
				firstname = "";
				lastname = "";
				position = "";
				salary = "";
				startdate = "";
				hours = "";
				stafftype = "";
				success = "Employee removed";
			}
		}
		catch (Exception ex)
		{
			success = ex.Message;
		}
	} -->

			
		}
	}

	public void DeleteEmployee()
	{
		database.RemoveEmployee(employeeid);
	}


}
