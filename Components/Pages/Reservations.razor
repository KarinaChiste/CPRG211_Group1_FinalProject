@page "/reservations"
@using CPRG211_Group1_FinalProject.Classes

<h3 style="text-align: center;">Search Reservations</h3>

@* reservation search input *@
<form class="d-flex gap-4">
	<div style="width: 30%;">
		<label for="name">ID:</label>
		<input type="text" class="form-control" id="id" @bind="id" />
	</div>
	<div style="width: 30%;">
		<label for="name">Name:</label>
		<input type="text" class="form-control" id="name" @bind="name" />
	</div>
	<div style="width: 30%;">
		<label for="time">Time:</label>
		<input type="text" class="form-control" id="time" @bind="time" />
	</div>

	<div class="align-self-end flex-grow-1" style="width: 190px;">
		<button type="button" class="btn btn-primary w-100" style="white-space: nowrap;" @onclick="findReservation">
			Find Reservation
		</button>
	</div>
</form>

@* reservation dropdown list *@
<div class="form-group pt-3">
	<select class="form-select" @onchange="ReservationClick">
		<option>Select Reservation...</option>
		@foreach (Reservation reservation in reservations)
		{
			if (chosenReservation == 1)
			{
				<option selected value="@reservation"> @reservation.ToString() </option>
			}
			else if (chosenReservation == 2)
			{
				<option selected value="">Select Reservation...</option>
			}
			else
			{
				<option value="@reservation">@reservation.ToString()</option>
			}
		}

	</select>
</div>

@* searched reservation info *@
<div style="display: flex; flex-direction: column; align-items: center;">
	<div style="padding-top:10px">
		<label>Reservation ID:</label> <br />
		<input type="text" placeholder="Reservation ID" style="width:100%" readonly value="@reservationId" />
	</div>

	<div style="padding-top:10px">
		<label>Name:</label> <br />
		<input type="text" placeholder="Name" style="width:100%" readonly value="@reservationName" />
	</div>

	<div style="padding-top:10px">
		<label>Group Size:</label> <br />
		<input type="text" placeholder="Group Size" style="width:100%" readonly value="@reservationSize" />
	</div>

	<div style="padding-top:10px">
		<label>Date:</label> <br />
		<input type="text" placeholder="Date" style="width:100%" readonly value="@reservationDate" />
	</div>

	<div style="padding-top:10px; padding-bottom:30px">
		<label>Time:</label> <br />
		<input type="text" placeholder="Time" style="width:100%" readonly value="@reservationTime" />
	</div>
</div>

<h3 style="text-align: center;">Manage Reservations</h3>

@* add and remove buttons *@
<form class="d-flex gap-4" style="padding-bottom: 10px;">
	<a href="/addreservations" class="btn btn-primary w-100" style="white-space: nowrap;">
		Add New Reservation
	</a>

	<button class="btn btn-danger w-100" style="white-space: nowrap;" @onclick="DeleteReservation">
		Remove Current Reservation
	</button>
</form>


@code {
	private string id;
	private string name;
	private string time;

	private string reservationId;
	private string reservationName;
	private string reservationSize;
	private string reservationDate;
	private string reservationTime;

	public int chosenReservation = 1;
	public string[] reservationDetails;

	private List<Reservation> reservations = new List<Reservation>();
	private ReservationDbAccessor database = new ReservationDbAccessor();

	private void findReservation()
	{
		if (string.IsNullOrWhiteSpace(id) && string.IsNullOrWhiteSpace(name) && string.IsNullOrWhiteSpace(time))
		{
			reservationId = null;
			reservationName = null;
			reservationSize = null;
			reservationDate = null;
			reservationTime = null;
			chosenReservation = 2;

			return;
		}
		if (string.IsNullOrWhiteSpace(id))
		{
			id = null;
		}
		if (string.IsNullOrWhiteSpace(name))
		{
			name = null;
		}
		if (string.IsNullOrWhiteSpace(time))
		{
			time = null;
		}
		reservations = database.GetReservations(id, name, time);
		if (reservations.Count != 0)
		{
			ReservationSet(reservations[reservations.Count - 1].ToString());
		}
		else
		{
			reservationId = null;
			reservationName = null;
			reservationSize = null;
			reservationDate = null;
			reservationTime = null;
		}
	}

	public void ReservationSet(string theReservation)
	{
		if (theReservation.Length != 0)
		{
			reservationDetails = theReservation.Split(",");
			reservationId = reservationDetails[0];
			reservationName = reservationDetails[1];
			reservationSize = reservationDetails[2];
			reservationDate = reservationDetails[3];
			reservationTime = reservationDetails[4];

		}
	}

	public void ReservationClick(ChangeEventArgs arg1)
	{
		if (arg1.Value is not null)
		{
			string myReservation = (string)arg1.Value;
			ReservationSet(myReservation);
		}
	}

	// private void DeleteReservation()
	// {
	// 	database.RemoveReservation(reservationId);
	// }

	public async void DeleteReservation()
	{


		bool confirm = await Application.Current.MainPage.DisplayAlert("Delete Reservation", $"Delete reservation with ID: {reservationId}", "Confirm", "Cancel");

		if (confirm)
		{
			database.RemoveReservation(reservationId);
		}
	}

}
